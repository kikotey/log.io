name: npm-publish
on:
  push:
    branches:
      - master
jobs:
  npm-publish:
    name: npm-publish-server-folder
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@master
    - name: Set up Node.js
      uses: actions/setup-node@master
      with:
        node-version: 14.0.0
    - run: ls
    - run: ./setup.sh setup
    - id: publishserverlistener
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_AUTH_TOKEN }}
        package: ./server/package.json
        access: 'public'
    - id: publishstreamloader
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_AUTH_TOKEN }}
        package: ./inputs/file/package.json
        access: 'public'
    - id: publishcli
      uses: JS-DevTools/npm-publish@v1
      with:
        token: ${{ secrets.NPM_AUTH_TOKEN }}
        package: ./cli/package.json
        access: 'public'
    - name: Create Release server listener
      if: steps.publishserverlistener.outputs.type != 'none'
      id: create_release_server_listener
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.publishserverlistener.outputs.version }}
        release_name: Release ${{ steps.publishserverlistener.outputs.version }}
        body: ${{ steps.publishserverlistener.outputs.version }}
        draft: false
        prerelease: false
    - name: Create Release stream loader
      if: steps.publishstreamloader.outputs.type != 'none'
      id: create_release_stream_loader
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.publishstreamloader.outputs.version }}
        release_name: Release ${{ steps.publishstreamloader.outputs.version }}
        body: ${{ steps.publishstreamloader.outputs.version }}
        draft: false
        prerelease: false
    - name: Create Release CLI
      if: steps.publishcli.outputs.type != 'none'
      id: create_release_cli
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.publishcli.outputs.version }}
        release_name: Release ${{ steps.publishcli.outputs.version }}
        body: ${{ steps.publishcli.outputs.version }}
        draft: false
        prerelease: false
